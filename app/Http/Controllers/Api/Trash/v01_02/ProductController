<?php

namespace App\Http\Controllers\Api;

use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use App\Models\Produk;

use Illuminate\Database\Query\Expression;
use Illuminate\Validation\Rule;
use App\Rules\FloatValidator;

class ProductController extends Controller
{
    public function __construct()
    {
        session()->put('cilog.session_id', date('YmdHis').rand(1000,9999));
    }

    public function index()
    {
        $model = Produk::all();
        if($model->isEmpty()) {
            $result = [
                'code' => 'R0001',
                'noref' => session()->get('cilog.session_id'),
                'type' => 'error',
                'message' => 'Data not found'
            ];
            cilog()->toDb(json_encode($result));
            return response()->json($result, 404);
        }

        $result = [
            'code' => '00000',
            'noref' => session()->get('cilog.session_id'),
            'type' => 'success',
            'message' => 'Success',
            'data' => $model
        ];
        cilog()->toDb(json_encode($result));
        return response()->json($result, 200);
    }

    public function store(Request $request)
    {
    }

    public function show($id)
    {
        $model = Produk::where((new Produk)->getKeyName(), $id)->first();
        if($model->isEmpty()) {
            $result = [
                'code' => 'R0001',
                'noref' => session()->get('cilog.session_id'),
                'type' => 'error',
                'message' => 'Data not found'
            ];
            cilog()->toDb(json_encode($result));
            return response()->json($result, 404);
        }

        $result = [
            'code' => '00000',
            'noref' => session()->get('cilog.session_id'),
            'type' => 'success',
            'message' => 'Success',
            'data' => $model
        ];
        cilog()->toDb(json_encode($result));
        return response()->json($result, 200);
    }

    public function update(Request $request, $id)
    {
    }

    public function destroy($id)
    {
    }

    public function search($search=null, $value=null)
    {
    }
}

?>
